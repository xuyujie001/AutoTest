{"name": "test_goods_list", "status": "broken", "statusDetails": {"message": "requests.exceptions.MissingSchema: Invalid URL '': No scheme supplied. Perhaps you meant https://?", "trace": "def test_goods_list():\n        url = \"\"\n        data = {\n            \"page\": \"1\",\n            \"page_size\": \"10\",\n            \"ordering\": \"create_time\"\n        }\n    \n        request = Request()\n>       r = request.get(url, data=data)\n\ntests\\api\\test_Mall.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutils\\RequestsUtil.py:64: in get\n    return  self.requests_api(url, method=\"get\", **kwargs)\nutils\\RequestsUtil.py:46: in requests_api\n    r = requests.get(url,data=data,json=json,headers=headers,cookies=cookies)\nC:\\Users\\17935\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\requests\\api.py:73: in get\n    return request(\"get\", url, params=params, **kwargs)\nC:\\Users\\17935\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\requests\\api.py:59: in request\n    return session.request(method=method, url=url, **kwargs)\nC:\\Users\\17935\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\requests\\sessions.py:575: in request\n    prep = self.prepare_request(req)\nC:\\Users\\17935\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\requests\\sessions.py:486: in prepare_request\n    p.prepare(\nC:\\Users\\17935\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\requests\\models.py:368: in prepare\n    self.prepare_url(url, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <PreparedRequest [GET]>, url = '', params = OrderedDict()\n\n    def prepare_url(self, url, params):\n        \"\"\"Prepares the given HTTP URL.\"\"\"\n        #: Accept objects that have string representations.\n        #: We're unable to blindly call unicode/str functions\n        #: as this will include the bytestring indicator (b'')\n        #: on python 3.x.\n        #: https://github.com/psf/requests/pull/2238\n        if isinstance(url, bytes):\n            url = url.decode(\"utf8\")\n        else:\n            url = str(url)\n    \n        # Remove leading whitespaces from url\n        url = url.lstrip()\n    \n        # Don't do any URL preparation for non-HTTP schemes like `mailto`,\n        # `data` etc to work around exceptions from `url_parse`, which\n        # handles RFC 3986 only.\n        if \":\" in url and not url.lower().startswith(\"http\"):\n            self.url = url\n            return\n    \n        # Support for unicode domain names and paths.\n        try:\n            scheme, auth, host, port, path, query, fragment = parse_url(url)\n        except LocationParseError as e:\n            raise InvalidURL(*e.args)\n    \n        if not scheme:\n>           raise MissingSchema(\n                f\"Invalid URL {url!r}: No scheme supplied. \"\n                f\"Perhaps you meant https://{url}?\"\n            )\nE           requests.exceptions.MissingSchema: Invalid URL '': No scheme supplied. Perhaps you meant https://?\n\nC:\\Users\\17935\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\requests\\models.py:439: MissingSchema"}, "attachments": [{"name": "log", "source": "53d7460c-e63d-4705-bf77-6900fb317aed-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "4b6e33eb-4520-4350-881e-f729b9d9dd89-attachment.txt", "type": "text/plain"}], "start": 1701063402682, "stop": 1701063402682, "uuid": "9fe26a18-7784-4dca-bd06-05b2b5438fe2", "historyId": "7114f9f56ae6c87c0cb627846c4d3a2c", "testCaseId": "7114f9f56ae6c87c0cb627846c4d3a2c", "fullName": "tests.api.test_Mall#test_goods_list", "labels": [{"name": "parentSuite", "value": "tests.api"}, {"name": "suite", "value": "test_Mall"}, {"name": "host", "value": "须宇杰的电脑"}, {"name": "thread", "value": "2032-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.api.test_Mall"}]}