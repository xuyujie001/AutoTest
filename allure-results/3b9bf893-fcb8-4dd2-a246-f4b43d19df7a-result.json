{"name": "test_order", "status": "broken", "statusDetails": {"message": "requests.exceptions.MissingSchema: Invalid URL '': No scheme supplied. Perhaps you meant https://?", "trace": "def test_order():\n        url = ''\n        data = {\n            \"sku_id\": \"3\",\n            \"count\": \"1\",\n            \"selected\": \"true\"}\n        token = \"\"\n        headers = {'Authorization': 'JWT' + token}\n    \n        request =Request()\n>       r = request.post(url,json=data,headers=headers)\n\ntests\\api\\test_Mall.py:61: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutils\\RequestsUtil.py:67: in post\n    return  self.requests_api(url, method=\"post\", **kwargs)\nutils\\RequestsUtil.py:49: in requests_api\n    r = requests.post(url,data=data,json=json,headers=headers,cookies=cookies)\nC:\\Users\\17935\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\requests\\api.py:115: in post\n    return request(\"post\", url, data=data, json=json, **kwargs)\nC:\\Users\\17935\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\requests\\api.py:59: in request\n    return session.request(method=method, url=url, **kwargs)\nC:\\Users\\17935\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\requests\\sessions.py:575: in request\n    prep = self.prepare_request(req)\nC:\\Users\\17935\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\requests\\sessions.py:486: in prepare_request\n    p.prepare(\nC:\\Users\\17935\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\requests\\models.py:368: in prepare\n    self.prepare_url(url, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <PreparedRequest [POST]>, url = '', params = OrderedDict()\n\n    def prepare_url(self, url, params):\n        \"\"\"Prepares the given HTTP URL.\"\"\"\n        #: Accept objects that have string representations.\n        #: We're unable to blindly call unicode/str functions\n        #: as this will include the bytestring indicator (b'')\n        #: on python 3.x.\n        #: https://github.com/psf/requests/pull/2238\n        if isinstance(url, bytes):\n            url = url.decode(\"utf8\")\n        else:\n            url = str(url)\n    \n        # Remove leading whitespaces from url\n        url = url.lstrip()\n    \n        # Don't do any URL preparation for non-HTTP schemes like `mailto`,\n        # `data` etc to work around exceptions from `url_parse`, which\n        # handles RFC 3986 only.\n        if \":\" in url and not url.lower().startswith(\"http\"):\n            self.url = url\n            return\n    \n        # Support for unicode domain names and paths.\n        try:\n            scheme, auth, host, port, path, query, fragment = parse_url(url)\n        except LocationParseError as e:\n            raise InvalidURL(*e.args)\n    \n        if not scheme:\n>           raise MissingSchema(\n                f\"Invalid URL {url!r}: No scheme supplied. \"\n                f\"Perhaps you meant https://{url}?\"\n            )\nE           requests.exceptions.MissingSchema: Invalid URL '': No scheme supplied. Perhaps you meant https://?\n\nC:\\Users\\17935\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\requests\\models.py:439: MissingSchema"}, "attachments": [{"name": "log", "source": "be4e7c11-ed28-40f6-959e-3b984c580a00-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "c2141336-d7a0-47cf-b16b-9da71d6e6536-attachment.txt", "type": "text/plain"}], "start": 1701063402745, "stop": 1701063402745, "uuid": "ef296664-6340-4672-8638-a5bd27a26d39", "historyId": "7461e0ce3a0fd0697f3411823c83cef3", "testCaseId": "7461e0ce3a0fd0697f3411823c83cef3", "fullName": "tests.api.test_Mall#test_order", "labels": [{"name": "parentSuite", "value": "tests.api"}, {"name": "suite", "value": "test_Mall"}, {"name": "host", "value": "须宇杰的电脑"}, {"name": "thread", "value": "2032-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.api.test_Mall"}]}